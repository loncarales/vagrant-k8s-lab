[defaults]
# (string) Sets the macro for the 'ansible_managed' variable available for :ref:`ansible_collections.ansible.builtin.template_module` and :ref:`ansible_collections.ansible.windows.win_template_module`.  This is only relevant for those two modules.
ansible_managed = Ansible managed: {file} modified on %Y-%m-%d %H:%M:%S by {uid} on {host}. Please do not modify or change anything manually.
# (boolean) Set this to "False" if you want to avoid host key checking by the underlying tools Ansible uses to connect to the host
host_key_checking = False
# (pathspec) Colon separated paths in which Ansible will search for Roles.
roles_path = ./ansible/roles:./ansible/galaxy_roles
# (pathspec) Colon separated paths in which Ansible will search for Collections.
collections_path = ./ansible/ansible_collections
# (boolean) If you have cowsay installed but want to avoid the 'cows' (why????), use this.
nocows = True
# (bool) This controls whether a failed Ansible playbook should create a .retry file.
retry_files_enabled = False
# (pathlist) Comma separated list of Ansible inventory sources
inventory = ./ansible/inventory.yml

[connection]
# (boolean) This is a global option, each connection plugin can override either by having more specific options or not supporting pipelining at all.
# Pipelining, if supported by the connection plugin, reduces the number of network operations required to execute a module on the remote server, by executing many Ansible modules without actual file transfer.
# It can result in a very significant performance improvement when enabled.
# However this conflicts with privilege escalation (become). For example, when using 'sudo:' operations you must first disable 'requiretty' in /etc/sudoers on all managed hosts, which is why it is disabled by default.
# This setting will be disabled if ``ANSIBLE_KEEP_REMOTE_FILES`` is enabled.
pipelining = True
